!function(e){var t={};function r(s){if(t[s])return t[s].exports;var n=t[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=t,r.d=function(e,t,s){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(r.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(s,n,function(t){return e[t]}.bind(null,n));return s},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=2)}([function(e,t){e.exports=require("express")},function(e,t){e.exports=require("body-parser")},function(e,t,r){"use strict";r.r(t);var s=r(0),n=r.n(s);var o=[{id:1,menu:"Fried Rice",price:1500,status:"available"},{id:2,menu:"Fried Rice",price:1500,status:"available"},{id:3,menu:"Fried Rice",price:1500,status:"available"}];var i=class{static getOrders(e,t){t.status(200).json(o)}static welcome(e,t){t.json({message:"welcome to FastFoodFast"})}static createOrder(e,t){const{id:r,menu:s,price:n,status:i}=e.body,d=e.body;o.find(e=>parseInt(e.id)==Number(d.id))?t.status(404).json({message:"Order with the id exist"}):(o.push(d),t.status(201).json(o))}static getOrder(e,t){const r=e.params.id,s=o.find(e=>e.id===Number(r));s?t.status(200).json(s):t.status(404).json({message:"Order not found!"})}static updateOrder(e,t){let{id:r,menu:s,price:n,status:i}=e.body;const d=e.body;let u=e.params.id,a=o.find(e=>parseInt(e.id)===Number(u));a?u==d.id?(a.id=e.body.id,a.menu=e.body.menu,a.price=e.body.price,a.status=e.body.status,t.status(201).json(o)):t.status(404).json({message:"Id mismatch!"}):t.status(404).json({message:"Order not found!"})}};const d=r(1),u=(d.json(),d.urlencoded({extended:!0})),a=n()();a.use(d.json()),a.use(d.urlencoded({extended:!0}));const c=n.a.Router(),l=process.env.PORT||4001;a.use("/api/v1",c),c.post("/orders",u,i.createOrder),c.put("/orders/:id",u,i.updateOrder),c.get("/orders",i.getOrders),c.get("/",i.welcome),c.get("/orders/:id",i.getOrder),a.listen(l,()=>{console.log(`Server is listening on port ${l}`)});t.default=a}]);