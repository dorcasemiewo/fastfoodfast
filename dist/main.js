!function(e){var r={};function t(s){if(r[s])return r[s].exports;var o=r[s]={i:s,l:!1,exports:{}};return e[s].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=r,t.d=function(e,r,s){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:s})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(t.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var o in e)t.d(s,o,function(r){return e[r]}.bind(null,o));return s},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="/",t(t.s=2)}([function(e,r){e.exports=require("express")},function(e,r,t){var s=t(6).orders,o=function(e,r,t){e.status(r),e.json(t)};defaultHomePage=function(e,r){r.render("index")},getAllOrders=function(e,r){o(r,200,s)},getOrderById=function(e,r){""==e.params.orderId?o(r,200,{status:"failed",message:"Please supply an orderId"}):s.forEach(function(t){t.id==e.params.orderId&&o(r,200,{status:"success",message:"Order Retrieved",order:t})}),o(r,200,{status:"failed",message:"Invalid orderId"})},createNewOrder=function(e,r){var t=e.body;""!==t.id&&""!==t.menu&&""!==t.price&&""!==t.status?(s.push(e.body),o(r,200,s)):o(r,200,{status:"failed",message:"some fields are empty"})},editOrder=function(e,r){""==e.params.orderId?o(r,200,{status:"failed",message:"insert an Order ID"}):(s.forEach(function(t){t.id==e.params.orderId&&(t.status=e.body.status,o(r,200,{status:"success",message:"order status updated",order:t}))}),o(r,200,{status:"failed",message:"order id did not match any order"}))},e.exports={getAllOrders:getAllOrders,getOrderById:getOrderById,createNewOrder:createNewOrder,editOrder:editOrder,defaultHomePage:defaultHomePage}},function(e,r,t){"use strict";t.r(r),function(e){const s=t(0),o=t(3),n=t(4),a=t(5),u=(t(1),a.urlencoded({extended:!1}),t(7)),d=s(),i=t(8),c=o(i);d.use(s.static(e+"/views")),d.set("view engine","ejs"),d.use(a.json()),d.use(a.urlencoded({extended:!1})),d.use("/api",u.router),d.use("/",u.htmlrouter),d.use(function(e,r,t){const s=new Error("Not Found");s.status=404,t(s)}),d.use(function(e,r,t,s){t.locals.message=e.message,t.locals.error="development"===r.app.get("env")?e:{},t.status(e.status||500),t.render("error")}),d.use(n(c,{publicPath:i.output.publicPath})),d.set("port",process.env.PORT||5e3);const l=d.listen(d.get("port"),function(){console.log("server is listening on port: "+l.address().port)});r.default=d}.call(this,"/")},function(e,r){e.exports=require("webpack")},function(e,r){e.exports=require("webpack-dev-middleware")},function(e,r){e.exports=require("body-parser")},function(e,r){e.exports=[{id:1,menu:"Fried Rice",price:1500,status:"available"},{id:2,menu:"Beans",price:2e3,status:"available"},{id:3,menu:"Ofada Rice",price:2e3,status:"available"},{id:4,menu:"Family Combo",price:5e3,status:"available"},{id:5,menu:"Fufu and Okro Soup",price:2e3,status:"unavailable"}]},function(e,r,t){const s=t(0).Router(),o=t(0).Router(),n=t(1);o.get("/",n.defaultHomePage),s.get("/v1/orders",n.getAllOrders),s.get("/v1/orders/:orderId",n.getOrderById),s.post("/v1/order",n.createNewOrder),s.put("/v1/orders/:orderId",n.editOrder),e.exports=s,e.exports=o},function(e,r,t){(function(r){const s=t(9);var o=t(10);e.exports={entry:"./app.js",target:"node",externals:[o()],devtool:"inline-source-map",output:{filename:"main.js",path:s.resolve(r,"dist"),publicPath:"/"}}}).call(this,"/")},function(e,r){e.exports=require("path")},function(e,r){e.exports=require("webpack-node-externals")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiZXhwcmVzc1wiIiwid2VicGFjazovLy8uL2NvbnRyb2xsZXIvY29udHJvbGxlci5qcyIsIndlYnBhY2s6Ly8vLi9hcHAuanMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwid2VicGFja1wiIiwid2VicGFjazovLy9leHRlcm5hbCBcIndlYnBhY2stZGV2LW1pZGRsZXdhcmVcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJib2R5LXBhcnNlclwiIiwid2VicGFjazovLy8uL21vZGVsL21vZGVsLmpzIiwid2VicGFjazovLy8uL3JvdXRlcy9yb3V0ZXMuanMiLCJ3ZWJwYWNrOi8vLy4vd2VicGFjay5jb25maWcuanMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicGF0aFwiIiwid2VicGFjazovLy9leHRlcm5hbCBcIndlYnBhY2stbm9kZS1leHRlcm5hbHNcIiJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsInJlcXVpcmUiLCJvcmRlcnMiLCJzZW5kSlNPTlJlc3BvbnNlIiwicmVzIiwic3RhdHVzIiwiY29udGVudCIsImpzb24iLCJkZWZhdWx0SG9tZVBhZ2UiLCJyZXEiLCJyZW5kZXIiLCJnZXRBbGxPcmRlcnMiLCJnZXRPcmRlckJ5SWQiLCJwYXJhbXMiLCJvcmRlcklkIiwibWVzc2FnZSIsImZvckVhY2giLCJvcmRlciIsImlkIiwiY3JlYXRlTmV3T3JkZXIiLCJkYXRhIiwiYm9keSIsIm1lbnUiLCJwcmljZSIsInB1c2giLCJlZGl0T3JkZXIiLCJfX3dlYnBhY2tfZXhwb3J0c19fIiwiX19kaXJuYW1lIiwiZXhwcmVzcyIsIndlYnBhY2siLCJ3ZWJwYWNrRGV2TWlkZGxld2FyZSIsImJvZHlQYXJzZXIiLCJhcGlSb3V0ZXMiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJhcHAiLCJjb25maWciLCJjb21waWxlciIsInVzZSIsInN0YXRpYyIsInNldCIsInJvdXRlciIsImh0bWxyb3V0ZXIiLCJuZXh0IiwiZXJyIiwiRXJyb3IiLCJsb2NhbHMiLCJlcnJvciIsInB1YmxpY1BhdGgiLCJvdXRwdXQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInNlcnZlciIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJhZGRyZXNzIiwicG9ydCIsIlJvdXRlciIsImNvbnRyb2xsZXIiLCJwb3N0IiwicHV0IiwicGF0aCIsIm5vZGVFeHRlcm5hbHMiLCJlbnRyeSIsInRhcmdldCIsImV4dGVybmFscyIsImRldnRvb2wiLCJmaWxlbmFtZSIsInJlc29sdmUiXSwibWFwcGluZ3MiOiJhQUNBLElBQUFBLEtBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsSUFDQUcsRUFBQUgsRUFDQUksR0FBQSxFQUNBSCxZQVVBLE9BTkFJLEVBQUFMLEdBQUFNLEtBQUFKLEVBQUFELFFBQUFDLElBQUFELFFBQUFGLEdBR0FHLEVBQUFFLEdBQUEsRUFHQUYsRUFBQUQsUUFLQUYsRUFBQVEsRUFBQUYsRUFHQU4sRUFBQVMsRUFBQVYsRUFHQUMsRUFBQVUsRUFBQSxTQUFBUixFQUFBUyxFQUFBQyxHQUNBWixFQUFBYSxFQUFBWCxFQUFBUyxJQUNBRyxPQUFBQyxlQUFB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QUFBLEtBQUFsQixPQUFBLGNBQ0FhLEdBQUEsRUFBQUksS0FBQSxRQUFBQyxNQUFBLElBQUFsQixPQUFBLGNBQ0FhLEdBQUEsRUFBQUksS0FBQSxhQUFBQyxNQUFBLElBQUFsQixPQUFBLGNBQ0FhLEdBQUEsRUFBQUksS0FBQSxlQUFBQyxNQUFBLElBQUFsQixPQUFBLGNBQ0FhLEdBQUEsRUFBQUksS0FBQSxxQkFBQUMsTUFBQSxJQUFBbEIsT0FBQSxpQ0NOSCxNQUFBb0MsRUFBZTVFLEVBQVEsR0FBUzhGLFNBQ2hDakIsRUFBbUI3RSxFQUFRLEdBQVM4RixTQUNwQ0MsRUFBbUIvRixFQUFRLEdBRTNCNkUsRUFBQTVELElBQUEsSUFBQThFLEVBQUFwRCxpQkFDQWlDLEVBQUEzRCxJQUFBLGFBQUE4RSxFQUFBakQsY0FDQThCLEVBQUEzRCxJQUFBLHNCQUFBOEUsRUFBQWhELGNBQ0E2QixFQUFBb0IsS0FBQSxZQUFBRCxFQUFBekMsZ0JBQ0FzQixFQUFBcUIsSUFBQSxzQkFBQUYsRUFBQW5DLFdBSUF6RCxFQUFBRCxRQUFBMEUsRUFDQXpFLEVBQUFELFFBQUEyRSxvQkNiQSxTQUFBZixHQUFBLE1BQUFvQyxFQUFhbEcsRUFBUSxHQUNyQixJQUFBbUcsRUFBb0JuRyxFQUFRLElBRTVCRyxFQUFBRCxTQUNBa0csTUFBQSxXQUNBQyxPQUFBLE9BQ0FDLFdBQUFILEtBQ0FJLFFBQUEsb0JBQ0FuQixRQUNBb0IsU0FBQSxVQUNBTixPQUFBTyxRQUFBM0MsRUFBQSxRQUNBcUIsV0FBQSxzQ0NYQWhGLEVBQUFELFFBQUFrQyxRQUFBLHVCQ0FBakMsRUFBQUQsUUFBQWtDLFFBQUEiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiL1wiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMik7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJleHByZXNzXCIpOyIsInZhciBtb2RlbCA9IHJlcXVpcmUoJy4uL21vZGVsL21vZGVsLmpzJyk7XHJcbnZhciBvcmRlcnMgPSBtb2RlbC5vcmRlcnM7XHJcblxyXG52YXIgc2VuZEpTT05SZXNwb25zZSA9IGZ1bmN0aW9uIChyZXMsIHN0YXR1cywgY29udGVudCl7XHJcbiAgcmVzLnN0YXR1cyhzdGF0dXMpO1xyXG4gIHJlcy5qc29uKGNvbnRlbnQpO1xyXG59O1xyXG5cclxuZGVmYXVsdEhvbWVQYWdlID0gZnVuY3Rpb24ocmVxLCByZXMpe1xyXG4gIC8vcmVzLnNlbmRGaWxlKF9fZGlybmFtZSsnL1VJL2luZGV4Lmh0bWwnKTtcclxuICByZXMucmVuZGVyKCdpbmRleCcpO1xyXG59O1xyXG5cclxuZ2V0QWxsT3JkZXJzID0gZnVuY3Rpb24ocmVxLCByZXMpIHtcclxuICAgIHNlbmRKU09OUmVzcG9uc2UocmVzLCAyMDAsIG9yZGVycyk7XHJcbn07XHJcblxyXG5nZXRPcmRlckJ5SWQgPSBmdW5jdGlvbihyZXEsIHJlcykge1xyXG4gIGlmKHJlcS5wYXJhbXMub3JkZXJJZCA9PVwiXCIpe1xyXG4gICAgc2VuZEpTT05SZXNwb25zZShyZXMsIDIwMCwge3N0YXR1czogXCJmYWlsZWRcIiwgbWVzc2FnZTogXCJQbGVhc2Ugc3VwcGx5IGFuIG9yZGVySWRcIn0pO1xyXG4gIH1lbHNle1xyXG4gICAgb3JkZXJzLmZvckVhY2goZnVuY3Rpb24ob3JkZXIpe1xyXG4gICAgICBpZihvcmRlci5pZCA9PSByZXEucGFyYW1zLm9yZGVySWQpe1xyXG4gICAgICAgIHNlbmRKU09OUmVzcG9uc2UocmVzLCAyMDAsIHtzdGF0dXM6IFwic3VjY2Vzc1wiLCBtZXNzYWdlOiBcIk9yZGVyIFJldHJpZXZlZFwiLCBvcmRlcjogb3JkZXJ9KTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG4gIHNlbmRKU09OUmVzcG9uc2UocmVzLCAyMDAsIHtzdGF0dXM6IFwiZmFpbGVkXCIsIG1lc3NhZ2U6IFwiSW52YWxpZCBvcmRlcklkXCJ9KTtcclxufTtcclxuXHJcblxyXG5jcmVhdGVOZXdPcmRlciA9IGZ1bmN0aW9uKHJlcSwgcmVzKSB7XHJcbiAgdmFyIGRhdGEgPSByZXEuYm9keTtcclxuICBpZihkYXRhLmlkICE9PSBcIlwiICYmIGRhdGEubWVudSAhPT0gXCJcIiAmJiBkYXRhLnByaWNlICE9PSBcIlwiICYmIGRhdGEuc3RhdHVzICE9PSBcIlwiKXtcclxuICAgIG9yZGVycy5wdXNoKHJlcS5ib2R5KTtcclxuICAgIHNlbmRKU09OUmVzcG9uc2UocmVzLCAyMDAsIG9yZGVycyk7XHJcbiAgfWVsc2V7XHJcbiAgICBzZW5kSlNPTlJlc3BvbnNlKHJlcywgMjAwLCB7c3RhdHVzOiBcImZhaWxlZFwiLCBtZXNzYWdlOiBcInNvbWUgZmllbGRzIGFyZSBlbXB0eVwifSk7XHJcbiAgfVxyXG59O1xyXG5cclxuXHJcbmVkaXRPcmRlciA9IGZ1bmN0aW9uKHJlcSwgcmVzKXtcclxuXHJcbiAgaWYocmVxLnBhcmFtcy5vcmRlcklkID09IFwiXCIpe1xyXG4gICAgc2VuZEpTT05SZXNwb25zZShyZXMsIDIwMCwge3N0YXR1czogXCJmYWlsZWRcIiwgbWVzc2FnZTogXCJpbnNlcnQgYW4gT3JkZXIgSURcIn0pO1xyXG4gIH1lbHNle1xyXG5cclxuICAgIG9yZGVycy5mb3JFYWNoKGZ1bmN0aW9uKG9yZGVyKXtcclxuICAgICAgaWYob3JkZXIuaWQgPT0gcmVxLnBhcmFtcy5vcmRlcklkKXtcclxuICAgICAgICAvL29yZGVyLm1lbnUgPSByZXEuYm9keS5tZW51O1xyXG4gICAgICAgIC8vb3JkZXIucHJpY2UgPSByZXEuYm9keS5wcmljZTtcclxuICAgICAgICBvcmRlci5zdGF0dXMgPSByZXEuYm9keS5zdGF0dXM7XHJcbiAgICAgICAgc2VuZEpTT05SZXNwb25zZShyZXMsIDIwMCwge3N0YXR1czogXCJzdWNjZXNzXCIsIG1lc3NhZ2U6IFwib3JkZXIgc3RhdHVzIHVwZGF0ZWRcIiwgb3JkZXI6IG9yZGVyfSk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgc2VuZEpTT05SZXNwb25zZShyZXMsIDIwMCwge3N0YXR1czogXCJmYWlsZWRcIiwgbWVzc2FnZTogXCJvcmRlciBpZCBkaWQgbm90IG1hdGNoIGFueSBvcmRlclwifSk7XHJcbiAgfVxyXG59O1xyXG5cclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gIGdldEFsbE9yZGVyczogZ2V0QWxsT3JkZXJzLFxyXG4gIGdldE9yZGVyQnlJZCA6IGdldE9yZGVyQnlJZCxcclxuICBjcmVhdGVOZXdPcmRlcjogY3JlYXRlTmV3T3JkZXIsXHJcbiAgZWRpdE9yZGVyIDogZWRpdE9yZGVyLFxyXG4gIGRlZmF1bHRIb21lUGFnZTogZGVmYXVsdEhvbWVQYWdlXHJcbn07XHJcbiIsImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7Ly9pbmJ1aWx0IG1vZHVsZVxuY29uc3Qgd2VicGFjayA9IHJlcXVpcmUoJ3dlYnBhY2snKTtcbmNvbnN0IHdlYnBhY2tEZXZNaWRkbGV3YXJlID0gcmVxdWlyZSgnd2VicGFjay1kZXYtbWlkZGxld2FyZScpO1xuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7IC8vaW5idWlsdCBtb2R1bGVcbmNvbnN0IGNvbnRyb2xsZXIgPSByZXF1aXJlKCcuL2NvbnRyb2xsZXIvY29udHJvbGxlci5qcycpOyAvL2N1c3RvbSBtb2R1bGVcbmNvbnN0IHVybGVuY29kZWRQYXJzZXIgPSBib2R5UGFyc2VyLnVybGVuY29kZWQoe2V4dGVuZGVkOmZhbHNlfSlcbmNvbnN0IGFwaVJvdXRlcyA9IHJlcXVpcmUoJy4vcm91dGVzL3JvdXRlcy5qcycpOyAvL2N1c3RvbSBtb2R1bGVcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuY29uc3QgY29uZmlnID0gcmVxdWlyZSgnLi93ZWJwYWNrLmNvbmZpZy5qcycpO1xuY29uc3QgY29tcGlsZXIgPSB3ZWJwYWNrKGNvbmZpZyk7XG5cbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoX19kaXJuYW1lICsgJy92aWV3cycpKTtcbmFwcC5zZXQoJ3ZpZXcgZW5naW5lJywgJ2VqcycpO1xuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHtleHRlbmRlZDpmYWxzZX0pKTtcblxuLy9yb3V0ZXMgZm9yIHlvdXIgZW5kcG9pbnRcbmFwcC51c2UoJy9hcGknLCBhcGlSb3V0ZXMucm91dGVyKTtcbi8vcm91dGVzIGZvciB5b3VyIGh0bWwgcGFnZXNcbmFwcC51c2UoJy8nLCBhcGlSb3V0ZXMuaHRtbHJvdXRlcik7XG5cbi8vY2F0Y2ggNDA0IGFuZCBmb3J3YXJkIHRvIGVycm9yIGhhbmRsZXJcbmFwcC51c2UoZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpe1xuY29uc3QgZXJyID0gbmV3IEVycm9yKCdOb3QgRm91bmQnKTtcbiAgZXJyLnN0YXR1cyA9IDQwNDtcbiAgbmV4dChlcnIpO1xufSk7XG5cblxuXG4vLyBlcnJvciBoYW5kbGVyXG5hcHAudXNlKGZ1bmN0aW9uKGVyciwgcmVxLCByZXMsIG5leHQpe1xuICByZXMubG9jYWxzLm1lc3NhZ2UgPSBlcnIubWVzc2FnZTtcbiAgcmVzLmxvY2Fscy5lcnJvciA9IHJlcS5hcHAuZ2V0KCdlbnYnKSA9PT0gJ2RldmVsb3BtZW50Jz8gZXJyOiB7fTtcbiAgcmVzLnN0YXR1cyhlcnIuc3RhdHVzIHx8IDUwMCk7XG4gIHJlcy5yZW5kZXIoJ2Vycm9yJyk7XG59KTtcblxuYXBwLnVzZSh3ZWJwYWNrRGV2TWlkZGxld2FyZShjb21waWxlciwge1xuICBwdWJsaWNQYXRoOiBjb25maWcub3V0cHV0LnB1YmxpY1BhdGhcbn0pKTtcblxuYXBwLnNldCgncG9ydCcsIChwcm9jZXNzLmVudi5QT1JUIHx8IDUwMDApKTtcblxuXG5cbmNvbnN0IHNlcnZlciA9IGFwcC5saXN0ZW4oYXBwLmdldCgncG9ydCcpLCBmdW5jdGlvbigpe1xuICBjb25zb2xlLmxvZygnc2VydmVyIGlzIGxpc3RlbmluZyBvbiBwb3J0OiAnKyBzZXJ2ZXIuYWRkcmVzcygpLnBvcnQpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGFwcDtcbiIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIndlYnBhY2tcIik7IiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwid2VicGFjay1kZXYtbWlkZGxld2FyZVwiKTsiLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJib2R5LXBhcnNlclwiKTsiLCJsZXQgb3JkZXJzID0gW1xyXG5cclxuICB7aWQgOiAxLCBtZW51IDogXCJGcmllZCBSaWNlXCIsIHByaWNlIDogMTUwMCwgc3RhdHVzIDogXCJhdmFpbGFibGVcIn0sXHJcbiAge2lkIDogMiwgbWVudSA6IFwiQmVhbnNcIiwgcHJpY2UgOiAyMDAwLCBzdGF0dXMgOiBcImF2YWlsYWJsZVwifSxcclxuICB7aWQgOiAzLCBtZW51IDogXCJPZmFkYSBSaWNlXCIsIHByaWNlIDogMjAwMCwgc3RhdHVzIDogXCJhdmFpbGFibGVcIn0sXHJcbiAge2lkIDogNCwgbWVudSA6IFwiRmFtaWx5IENvbWJvXCIsIHByaWNlIDogNTAwMCwgc3RhdHVzIDogXCJhdmFpbGFibGVcIn0sXHJcbiAge2lkIDogNSwgbWVudSA6IFwiRnVmdSBhbmQgT2tybyBTb3VwXCIsIHByaWNlIDogMjAwMCwgc3RhdHVzIDogXCJ1bmF2YWlsYWJsZVwifVxyXG5dO1xyXG5cclxuLy9leHBvcnQgZGVmYXVsdCBvcmRlcnM7XHJcbm1vZHVsZS5leHBvcnRzID0gb3JkZXJzO1xyXG4iLCJjb25zdCByb3V0ZXIgPSByZXF1aXJlKCdleHByZXNzJykuUm91dGVyKCk7XHJcbmNvbnN0IGh0bWxyb3V0ZXIgPSByZXF1aXJlKCdleHByZXNzJykuUm91dGVyKCk7XHJcbmNvbnN0IGNvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9jb250cm9sbGVyL2NvbnRyb2xsZXIuanMnKTtcclxuXHJcbmh0bWxyb3V0ZXIuZ2V0KCcvJywgY29udHJvbGxlci5kZWZhdWx0SG9tZVBhZ2UpO1xyXG5yb3V0ZXIuZ2V0KCcvdjEvb3JkZXJzJywgY29udHJvbGxlci5nZXRBbGxPcmRlcnMpO1xyXG5yb3V0ZXIuZ2V0KCcvdjEvb3JkZXJzLzpvcmRlcklkJywgY29udHJvbGxlci5nZXRPcmRlckJ5SWQpO1xyXG5yb3V0ZXIucG9zdCgnL3YxL29yZGVyJywgY29udHJvbGxlci5jcmVhdGVOZXdPcmRlcik7XHJcbnJvdXRlci5wdXQoJy92MS9vcmRlcnMvOm9yZGVySWQnLCBjb250cm9sbGVyLmVkaXRPcmRlcik7XHJcblxyXG5cclxuLy9leHBvcnQgZGVmYXVsdCByb3V0ZXMgO1xyXG5tb2R1bGUuIGV4cG9ydHMgPSByb3V0ZXI7XHJcbm1vZHVsZS4gZXhwb3J0cyA9IGh0bWxyb3V0ZXI7XHJcbiIsImNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XHJcbnZhciBub2RlRXh0ZXJuYWxzID0gcmVxdWlyZSgnd2VicGFjay1ub2RlLWV4dGVybmFscycpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgZW50cnk6ICcuL2FwcC5qcycsXHJcbiAgdGFyZ2V0OiAnbm9kZScsIC8vIGluIG9yZGVyIHRvIGlnbm9yZSBidWlsdC1pbiBtb2R1bGVzIGxpa2UgcGF0aCwgZnMsIGV0Yy4gXHJcbiAgICBleHRlcm5hbHM6IFtub2RlRXh0ZXJuYWxzKCldLFxyXG4gICAgZGV2dG9vbDogJ2lubGluZS1zb3VyY2UtbWFwJyxcclxuICBvdXRwdXQ6IHtcclxuICAgIGZpbGVuYW1lOiAnbWFpbi5qcycsXHJcbiAgICBwYXRoOiBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnZGlzdCcpLFxyXG4gICAgcHVibGljUGF0aDogJy8nXHJcbiAgfVxyXG59OyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInBhdGhcIik7IiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwid2VicGFjay1ub2RlLWV4dGVybmFsc1wiKTsiXSwic291cmNlUm9vdCI6IiJ9